syntax = "proto3";
package goim_friend;
option go_package = "./pb";

message FriendInfo {
  int64 userID = 1;
  string account = 2;
  string nickName = 3;
  int64 acceptTime = 4;
  int64 registerTime = 5;
}

message AddFriendRequest{
  int64 userID = 1;
  int64 targetUser = 2;
  string message = 3;
}

message AddFriendResponse{
  int32 code = 1;
  string message = 2;
}

message AcceptFriendRequest {
  int64 userID = 1;
  int64 targetID = 2;
  int64 notificationID = 3;
}

message AcceptFriendResponse {
  int32 code = 1;
  string message = 2;
}

message FriendListRequest {
  int64 userID = 1;
}

message FriendListResponse {
  int32 code = 1;
  string message = 2;
  repeated FriendInfo friends = 3;
}

message FriendInfoRequest {
  int64 userID = 1;
  int64 friendID = 2;
}

message FriendInfoResponse{
  int32  code = 1;
  string message = 2;
  FriendInfo info = 3;
}

message FriendshipRequest {
  int64 userID = 1;
  int64 friendID = 2;
}

message FriendshipResponse {
  int32 code = 1;
  string message = 2;
  bool isFriend = 3;
}

message RemoveFriendRequest {
  int64 userID = 1;
  int64 friendID = 2;
}

message RemoveFriendResponse {
  int32 code = 1;
  string message = 2;
}

// Friend 好友相关的RPC服务
service Friend {
  // AddFriend  添加好友
  rpc AddFriend(AddFriendRequest) returns (AddFriendResponse) {}
  // AcceptFriend  接收添加好友请求
  rpc AcceptFriend(AcceptFriendRequest) returns (AcceptFriendResponse) {}
  // ListFriends 获取好友列表
  rpc ListFriends(FriendListRequest) returns (FriendListResponse) {}
  // GetFriendInfo 获取好友信息
  rpc GetFriendInfo(FriendInfoRequest) returns (FriendInfoResponse) {}
  // CheckFriendship 检查好友关系
  rpc CheckFriendship(FriendshipRequest) returns (FriendshipResponse) {}
  // RemoveFriend 删除好友
  rpc RemoveFriend(RemoveFriendRequest) returns (RemoveFriendResponse) {}
}