// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.2
// source: goim_msg.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MessageFlag 消息类型定义
type MessageFlag int32

const (
	MessageFlag_None                    MessageFlag = 0
	MessageFlag_From                    MessageFlag = 1
	MessageFlag_To                      MessageFlag = 2
	MessageFlag_Group                   MessageFlag = 3
	MessageFlag_FriendAccepted          MessageFlag = 11
	MessageFlag_GroupInvitationAccepted MessageFlag = 21
	// 加密消息，服务端只负责转发，不进行持久化和分析
	MessageFlag_EncryptedMessage MessageFlag = 501
	// 加密通信第一次握手：发起者向接收者请求开启加密通信，该消息用于验证好友关系以及让对方确认
	MessageFlag_EncryptMessageHandshake1 MessageFlag = 502
	// 加密通信第二次握手：接收方生成非对称钥匙对，将公钥发送给发起者
	MessageFlag_EncryptMessageHandshake2 MessageFlag = 503
	// 加密通信第三次握手：发起者收到后用公钥加密一个随机数回复给接收者
	MessageFlag_EncryptMessageHandshake3 MessageFlag = 504
)

// Enum value maps for MessageFlag.
var (
	MessageFlag_name = map[int32]string{
		0:   "None",
		1:   "From",
		2:   "To",
		3:   "Group",
		11:  "FriendAccepted",
		21:  "GroupInvitationAccepted",
		501: "EncryptedMessage",
		502: "EncryptMessageHandshake1",
		503: "EncryptMessageHandshake2",
		504: "EncryptMessageHandshake3",
	}
	MessageFlag_value = map[string]int32{
		"None":                     0,
		"From":                     1,
		"To":                       2,
		"Group":                    3,
		"FriendAccepted":           11,
		"GroupInvitationAccepted":  21,
		"EncryptedMessage":         501,
		"EncryptMessageHandshake1": 502,
		"EncryptMessageHandshake2": 503,
		"EncryptMessageHandshake3": 504,
	}
)

func (x MessageFlag) Enum() *MessageFlag {
	p := new(MessageFlag)
	*p = x
	return p
}

func (x MessageFlag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageFlag) Descriptor() protoreflect.EnumDescriptor {
	return file_goim_msg_proto_enumTypes[0].Descriptor()
}

func (MessageFlag) Type() protoreflect.EnumType {
	return &file_goim_msg_proto_enumTypes[0]
}

func (x MessageFlag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageFlag.Descriptor instead.
func (MessageFlag) EnumDescriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{0}
}

type BaseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      int64       `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To        int64       `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Content   string      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Flag      MessageFlag `protobuf:"varint,4,opt,name=flag,proto3,enum=goim_msg.MessageFlag" json:"flag,omitempty"`
	Timestamp int64       `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id        int64       `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Seq       int64       `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
	DeviceId  string      `protobuf:"bytes,8,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *BaseMsg) Reset() {
	*x = BaseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseMsg) ProtoMessage() {}

func (x *BaseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseMsg.ProtoReflect.Descriptor instead.
func (*BaseMsg) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{0}
}

func (x *BaseMsg) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *BaseMsg) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *BaseMsg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *BaseMsg) GetFlag() MessageFlag {
	if x != nil {
		return x.Flag
	}
	return MessageFlag_None
}

func (x *BaseMsg) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BaseMsg) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseMsg) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *BaseMsg) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type SendMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *BaseMsg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SendMsgRequest) Reset() {
	*x = SendMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgRequest) ProtoMessage() {}

func (x *SendMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgRequest.ProtoReflect.Descriptor instead.
func (*SendMsgRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{1}
}

func (x *SendMsgRequest) GetMsg() *BaseMsg {
	if x != nil {
		return x.Msg
	}
	return nil
}

type SendMsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageId int64  `protobuf:"varint,3,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Content   string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SendMsgResponse) Reset() {
	*x = SendMsgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgResponse) ProtoMessage() {}

func (x *SendMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgResponse.ProtoReflect.Descriptor instead.
func (*SendMsgResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{2}
}

func (x *SendMsgResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendMsgResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendMsgResponse) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SendMsgResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SendMsgResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 同步离线消息请求
type SyncMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastSeq int64 `protobuf:"varint,1,opt,name=lastSeq,proto3" json:"lastSeq,omitempty"`
	UserID  int64 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	// 可选参数，指定消息来源
	From *int64 `protobuf:"varint,3,opt,name=from,proto3,oneof" json:"from,omitempty"`
	// 可选参数，执行来源类型
	Flag *int32 `protobuf:"varint,4,opt,name=flag,proto3,oneof" json:"flag,omitempty"`
}

func (x *SyncMsgRequest) Reset() {
	*x = SyncMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMsgRequest) ProtoMessage() {}

func (x *SyncMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMsgRequest.ProtoReflect.Descriptor instead.
func (*SyncMsgRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{3}
}

func (x *SyncMsgRequest) GetLastSeq() int64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

func (x *SyncMsgRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SyncMsgRequest) GetFrom() int64 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *SyncMsgRequest) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

type SyncMsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32      `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	InitSeq  int64      `protobuf:"varint,3,opt,name=initSeq,proto3" json:"initSeq,omitempty"`
	LastSeq  int64      `protobuf:"varint,4,opt,name=lastSeq,proto3" json:"lastSeq,omitempty"`
	Messages []*BaseMsg `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SyncMsgResponse) Reset() {
	*x = SyncMsgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncMsgResponse) ProtoMessage() {}

func (x *SyncMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncMsgResponse.ProtoReflect.Descriptor instead.
func (*SyncMsgResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{4}
}

func (x *SyncMsgResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncMsgResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncMsgResponse) GetInitSeq() int64 {
	if x != nil {
		return x.InitSeq
	}
	return 0
}

func (x *SyncMsgResponse) GetLastSeq() int64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

func (x *SyncMsgResponse) GetMessages() []*BaseMsg {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SyncGroupMsgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Groups     []int64 `protobuf:"varint,2,rep,packed,name=groups,proto3" json:"groups,omitempty"`
	Timestamps []int64 `protobuf:"varint,3,rep,packed,name=timestamps,proto3" json:"timestamps,omitempty"`
}

func (x *SyncGroupMsgRequest) Reset() {
	*x = SyncGroupMsgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncGroupMsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncGroupMsgRequest) ProtoMessage() {}

func (x *SyncGroupMsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncGroupMsgRequest.ProtoReflect.Descriptor instead.
func (*SyncGroupMsgRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{5}
}

func (x *SyncGroupMsgRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SyncGroupMsgRequest) GetGroups() []int64 {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SyncGroupMsgRequest) GetTimestamps() []int64 {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

type SingleGroupMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID      int64      `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	StartTimeout int64      `protobuf:"varint,2,opt,name=startTimeout,proto3" json:"startTimeout,omitempty"`
	LastTimeout  int64      `protobuf:"varint,3,opt,name=lastTimeout,proto3" json:"lastTimeout,omitempty"`
	Msgs         []*BaseMsg `protobuf:"bytes,4,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *SingleGroupMessages) Reset() {
	*x = SingleGroupMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleGroupMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleGroupMessages) ProtoMessage() {}

func (x *SingleGroupMessages) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleGroupMessages.ProtoReflect.Descriptor instead.
func (*SingleGroupMessages) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{6}
}

func (x *SingleGroupMessages) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *SingleGroupMessages) GetStartTimeout() int64 {
	if x != nil {
		return x.StartTimeout
	}
	return 0
}

func (x *SingleGroupMessages) GetLastTimeout() int64 {
	if x != nil {
		return x.LastTimeout
	}
	return 0
}

func (x *SingleGroupMessages) GetMsgs() []*BaseMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type SyncGroupMsgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	GroupMessages []*SingleGroupMessages `protobuf:"bytes,3,rep,name=groupMessages,proto3" json:"groupMessages,omitempty"`
}

func (x *SyncGroupMsgResponse) Reset() {
	*x = SyncGroupMsgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncGroupMsgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncGroupMsgResponse) ProtoMessage() {}

func (x *SyncGroupMsgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncGroupMsgResponse.ProtoReflect.Descriptor instead.
func (*SyncGroupMsgResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{7}
}

func (x *SyncGroupMsgResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncGroupMsgResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncGroupMsgResponse) GetGroupMessages() []*SingleGroupMessages {
	if x != nil {
		return x.GroupMessages
	}
	return nil
}

type SyncGroupLatestMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID       int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Limit         int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	LastTimestamp int64 `protobuf:"varint,3,opt,name=lastTimestamp,proto3" json:"lastTimestamp,omitempty"`
}

func (x *SyncGroupLatestMessagesRequest) Reset() {
	*x = SyncGroupLatestMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncGroupLatestMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncGroupLatestMessagesRequest) ProtoMessage() {}

func (x *SyncGroupLatestMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncGroupLatestMessagesRequest.ProtoReflect.Descriptor instead.
func (*SyncGroupLatestMessagesRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{8}
}

func (x *SyncGroupLatestMessagesRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *SyncGroupLatestMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SyncGroupLatestMessagesRequest) GetLastTimestamp() int64 {
	if x != nil {
		return x.LastTimestamp
	}
	return 0
}

type SyncGroupLatestMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Msgs    []*BaseMsg `protobuf:"bytes,3,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *SyncGroupLatestMessagesResponse) Reset() {
	*x = SyncGroupLatestMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncGroupLatestMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncGroupLatestMessagesResponse) ProtoMessage() {}

func (x *SyncGroupLatestMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncGroupLatestMessagesResponse.ProtoReflect.Descriptor instead.
func (*SyncGroupLatestMessagesResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{9}
}

func (x *SyncGroupLatestMessagesResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncGroupLatestMessagesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncGroupLatestMessagesResponse) GetMsgs() []*BaseMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type MqGroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         int64       `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To           int64       `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Content      string      `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Flag         MessageFlag `protobuf:"varint,4,opt,name=flag,proto3,enum=goim_msg.MessageFlag" json:"flag,omitempty"`
	Timestamp    int64       `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id           int64       `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Seq          int64       `protobuf:"varint,7,opt,name=seq,proto3" json:"seq,omitempty"`
	DeviceId     string      `protobuf:"bytes,8,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	GroupMembers []string    `protobuf:"bytes,9,rep,name=groupMembers,proto3" json:"groupMembers,omitempty"`
}

func (x *MqGroupMessage) Reset() {
	*x = MqGroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MqGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MqGroupMessage) ProtoMessage() {}

func (x *MqGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MqGroupMessage.ProtoReflect.Descriptor instead.
func (*MqGroupMessage) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{10}
}

func (x *MqGroupMessage) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *MqGroupMessage) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *MqGroupMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MqGroupMessage) GetFlag() MessageFlag {
	if x != nil {
		return x.Flag
	}
	return MessageFlag_None
}

func (x *MqGroupMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MqGroupMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MqGroupMessage) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MqGroupMessage) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MqGroupMessage) GetGroupMembers() []string {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Receiver    int64  `protobuf:"varint,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	TriggerUser int64  `protobuf:"varint,3,opt,name=triggerUser,proto3" json:"triggerUser,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Read        bool   `protobuf:"varint,5,opt,name=read,proto3" json:"read,omitempty"`
	Type        int32  `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Timestamp   int64  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{11}
}

func (x *Notification) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Notification) GetReceiver() int64 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *Notification) GetTriggerUser() int64 {
	if x != nil {
		return x.TriggerUser
	}
	return 0
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notification) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *Notification) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Notification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ListNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	NotRead bool  `protobuf:"varint,2,opt,name=notRead,proto3" json:"notRead,omitempty"`
}

func (x *ListNotificationRequest) Reset() {
	*x = ListNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationRequest) ProtoMessage() {}

func (x *ListNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{12}
}

func (x *ListNotificationRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ListNotificationRequest) GetNotRead() bool {
	if x != nil {
		return x.NotRead
	}
	return false
}

type ListNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code          int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Notifications []*Notification `protobuf:"bytes,3,rep,name=notifications,proto3" json:"notifications,omitempty"`
}

func (x *ListNotificationResponse) Reset() {
	*x = ListNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationResponse) ProtoMessage() {}

func (x *ListNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{13}
}

func (x *ListNotificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListNotificationResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type MarkNotificationReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	NotificationID int64 `protobuf:"varint,2,opt,name=notificationID,proto3" json:"notificationID,omitempty"`
}

func (x *MarkNotificationReadRequest) Reset() {
	*x = MarkNotificationReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkNotificationReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationReadRequest) ProtoMessage() {}

func (x *MarkNotificationReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationReadRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{14}
}

func (x *MarkNotificationReadRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *MarkNotificationReadRequest) GetNotificationID() int64 {
	if x != nil {
		return x.NotificationID
	}
	return 0
}

type MarkNotificationReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarkNotificationReadResponse) Reset() {
	*x = MarkNotificationReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkNotificationReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationReadResponse) ProtoMessage() {}

func (x *MarkNotificationReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationReadResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{15}
}

func (x *MarkNotificationReadResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MarkNotificationReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *AddNotificationRequest) Reset() {
	*x = AddNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNotificationRequest) ProtoMessage() {}

func (x *AddNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNotificationRequest.ProtoReflect.Descriptor instead.
func (*AddNotificationRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{16}
}

func (x *AddNotificationRequest) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type AddNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddNotificationResponse) Reset() {
	*x = AddNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNotificationResponse) ProtoMessage() {}

func (x *AddNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNotificationResponse.ProtoReflect.Descriptor instead.
func (*AddNotificationResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{17}
}

func (x *AddNotificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{18}
}

func (x *GetNotificationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Notification *Notification `protobuf:"bytes,3,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *GetNotificationResponse) Reset() {
	*x = GetNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationResponse) ProtoMessage() {}

func (x *GetNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{19}
}

func (x *GetNotificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNotificationResponse) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type RemoveNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveNotificationRequest) Reset() {
	*x = RemoveNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNotificationRequest) ProtoMessage() {}

func (x *RemoveNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNotificationRequest.ProtoReflect.Descriptor instead.
func (*RemoveNotificationRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveNotificationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RemoveNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveNotificationResponse) Reset() {
	*x = RemoveNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNotificationResponse) ProtoMessage() {}

func (x *RemoveNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNotificationResponse.ProtoReflect.Descriptor instead.
func (*RemoveNotificationResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{21}
}

func (x *RemoveNotificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RemoveNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SyncGroupMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Seq     int64 `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	UserID  int64 `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *SyncGroupMessageRequest) Reset() {
	*x = SyncGroupMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncGroupMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncGroupMessageRequest) ProtoMessage() {}

func (x *SyncGroupMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncGroupMessageRequest.ProtoReflect.Descriptor instead.
func (*SyncGroupMessageRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{22}
}

func (x *SyncGroupMessageRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *SyncGroupMessageRequest) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SyncGroupMessageRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type SyncGroupMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Msgs    []*BaseMsg `protobuf:"bytes,3,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *SyncGroupMessageResponse) Reset() {
	*x = SyncGroupMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncGroupMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncGroupMessageResponse) ProtoMessage() {}

func (x *SyncGroupMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncGroupMessageResponse.ProtoReflect.Descriptor instead.
func (*SyncGroupMessageResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{23}
}

func (x *SyncGroupMessageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncGroupMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncGroupMessageResponse) GetMsgs() []*BaseMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

type SyncLatestGroupMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID int64 `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Limit   int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	UserID  int64 `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *SyncLatestGroupMessageRequest) Reset() {
	*x = SyncLatestGroupMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLatestGroupMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLatestGroupMessageRequest) ProtoMessage() {}

func (x *SyncLatestGroupMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLatestGroupMessageRequest.ProtoReflect.Descriptor instead.
func (*SyncLatestGroupMessageRequest) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{24}
}

func (x *SyncLatestGroupMessageRequest) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *SyncLatestGroupMessageRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SyncLatestGroupMessageRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type SyncLatestGroupMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FirstSeq int64      `protobuf:"varint,3,opt,name=firstSeq,proto3" json:"firstSeq,omitempty"`
	LastSeq  int64      `protobuf:"varint,4,opt,name=lastSeq,proto3" json:"lastSeq,omitempty"`
	Msgs     []*BaseMsg `protobuf:"bytes,5,rep,name=msgs,proto3" json:"msgs,omitempty"`
}

func (x *SyncLatestGroupMessageResponse) Reset() {
	*x = SyncLatestGroupMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goim_msg_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLatestGroupMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLatestGroupMessageResponse) ProtoMessage() {}

func (x *SyncLatestGroupMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goim_msg_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLatestGroupMessageResponse.ProtoReflect.Descriptor instead.
func (*SyncLatestGroupMessageResponse) Descriptor() ([]byte, []int) {
	return file_goim_msg_proto_rawDescGZIP(), []int{25}
}

func (x *SyncLatestGroupMessageResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SyncLatestGroupMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SyncLatestGroupMessageResponse) GetFirstSeq() int64 {
	if x != nil {
		return x.FirstSeq
	}
	return 0
}

func (x *SyncLatestGroupMessageResponse) GetLastSeq() int64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

func (x *SyncLatestGroupMessageResponse) GetMsgs() []*BaseMsg {
	if x != nil {
		return x.Msgs
	}
	return nil
}

var File_goim_msg_proto protoreflect.FileDescriptor

var file_goim_msg_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0xce, 0x01, 0x0a, 0x07, 0x42,
	0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x69,
	0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x17, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x22, 0xa2, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x71,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x69, 0x74, 0x53, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f,
	0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x22,
	0x9c, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x14, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x0d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x1e, 0x53, 0x79,
	0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x76, 0x0a, 0x1f, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x0e, 0x4d,
	0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x69, 0x6d,
	0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4b, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5d, 0x0a, 0x1b, 0x4d,
	0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x1c, 0x4d, 0x61,
	0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f,
	0x6d, 0x73, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47,
	0x0a, 0x17, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5d, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x6f, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6d, 0x73, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73,
	0x22, 0x67, 0x0a, 0x1d, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xab, 0x01, 0x0a, 0x1e, 0x53, 0x79,
	0x6e, 0x63, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x53, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x2a, 0xd9, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x54,
	0x6f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x15, 0x12,
	0x15, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0xf5, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x31, 0x10, 0xf6, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x32, 0x10, 0xf7, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x33,
	0x10, 0xf8, 0x03, 0x32, 0x98, 0x08, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x4c, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x2e, 0x67,
	0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x70, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x67, 0x6f,
	0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x69,
	0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6e, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x6f,
	0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f,
	0x6d, 0x73, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67,
	0x0a, 0x14, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x69,
	0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67,
	0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x6f, 0x69, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goim_msg_proto_rawDescOnce sync.Once
	file_goim_msg_proto_rawDescData = file_goim_msg_proto_rawDesc
)

func file_goim_msg_proto_rawDescGZIP() []byte {
	file_goim_msg_proto_rawDescOnce.Do(func() {
		file_goim_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_goim_msg_proto_rawDescData)
	})
	return file_goim_msg_proto_rawDescData
}

var file_goim_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_goim_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_goim_msg_proto_goTypes = []interface{}{
	(MessageFlag)(0),                        // 0: goim_msg.MessageFlag
	(*BaseMsg)(nil),                         // 1: goim_msg.BaseMsg
	(*SendMsgRequest)(nil),                  // 2: goim_msg.SendMsgRequest
	(*SendMsgResponse)(nil),                 // 3: goim_msg.SendMsgResponse
	(*SyncMsgRequest)(nil),                  // 4: goim_msg.SyncMsgRequest
	(*SyncMsgResponse)(nil),                 // 5: goim_msg.SyncMsgResponse
	(*SyncGroupMsgRequest)(nil),             // 6: goim_msg.SyncGroupMsgRequest
	(*SingleGroupMessages)(nil),             // 7: goim_msg.SingleGroupMessages
	(*SyncGroupMsgResponse)(nil),            // 8: goim_msg.SyncGroupMsgResponse
	(*SyncGroupLatestMessagesRequest)(nil),  // 9: goim_msg.SyncGroupLatestMessagesRequest
	(*SyncGroupLatestMessagesResponse)(nil), // 10: goim_msg.SyncGroupLatestMessagesResponse
	(*MqGroupMessage)(nil),                  // 11: goim_msg.MqGroupMessage
	(*Notification)(nil),                    // 12: goim_msg.Notification
	(*ListNotificationRequest)(nil),         // 13: goim_msg.ListNotificationRequest
	(*ListNotificationResponse)(nil),        // 14: goim_msg.ListNotificationResponse
	(*MarkNotificationReadRequest)(nil),     // 15: goim_msg.MarkNotificationReadRequest
	(*MarkNotificationReadResponse)(nil),    // 16: goim_msg.MarkNotificationReadResponse
	(*AddNotificationRequest)(nil),          // 17: goim_msg.AddNotificationRequest
	(*AddNotificationResponse)(nil),         // 18: goim_msg.AddNotificationResponse
	(*GetNotificationRequest)(nil),          // 19: goim_msg.GetNotificationRequest
	(*GetNotificationResponse)(nil),         // 20: goim_msg.GetNotificationResponse
	(*RemoveNotificationRequest)(nil),       // 21: goim_msg.RemoveNotificationRequest
	(*RemoveNotificationResponse)(nil),      // 22: goim_msg.RemoveNotificationResponse
	(*SyncGroupMessageRequest)(nil),         // 23: goim_msg.SyncGroupMessageRequest
	(*SyncGroupMessageResponse)(nil),        // 24: goim_msg.SyncGroupMessageResponse
	(*SyncLatestGroupMessageRequest)(nil),   // 25: goim_msg.SyncLatestGroupMessageRequest
	(*SyncLatestGroupMessageResponse)(nil),  // 26: goim_msg.SyncLatestGroupMessageResponse
}
var file_goim_msg_proto_depIdxs = []int32{
	0,  // 0: goim_msg.BaseMsg.flag:type_name -> goim_msg.MessageFlag
	1,  // 1: goim_msg.SendMsgRequest.msg:type_name -> goim_msg.BaseMsg
	1,  // 2: goim_msg.SyncMsgResponse.messages:type_name -> goim_msg.BaseMsg
	1,  // 3: goim_msg.SingleGroupMessages.msgs:type_name -> goim_msg.BaseMsg
	7,  // 4: goim_msg.SyncGroupMsgResponse.groupMessages:type_name -> goim_msg.SingleGroupMessages
	1,  // 5: goim_msg.SyncGroupLatestMessagesResponse.msgs:type_name -> goim_msg.BaseMsg
	0,  // 6: goim_msg.MqGroupMessage.flag:type_name -> goim_msg.MessageFlag
	12, // 7: goim_msg.ListNotificationResponse.notifications:type_name -> goim_msg.Notification
	12, // 8: goim_msg.AddNotificationRequest.notification:type_name -> goim_msg.Notification
	12, // 9: goim_msg.GetNotificationResponse.notification:type_name -> goim_msg.Notification
	1,  // 10: goim_msg.SyncGroupMessageResponse.msgs:type_name -> goim_msg.BaseMsg
	1,  // 11: goim_msg.SyncLatestGroupMessageResponse.msgs:type_name -> goim_msg.BaseMsg
	4,  // 12: goim_msg.message.SyncOfflineMessages:input_type -> goim_msg.SyncMsgRequest
	2,  // 13: goim_msg.message.SendMessage:input_type -> goim_msg.SendMsgRequest
	6,  // 14: goim_msg.message.SyncOfflineGroupMessages:input_type -> goim_msg.SyncGroupMsgRequest
	9,  // 15: goim_msg.message.SyncGroupLatestMessages:input_type -> goim_msg.SyncGroupLatestMessagesRequest
	23, // 16: goim_msg.message.SyncGroupMessages:input_type -> goim_msg.SyncGroupMessageRequest
	25, // 17: goim_msg.message.SyncLatestGroupMessages:input_type -> goim_msg.SyncLatestGroupMessageRequest
	13, // 18: goim_msg.message.ListNotifications:input_type -> goim_msg.ListNotificationRequest
	15, // 19: goim_msg.message.MarkNotificationRead:input_type -> goim_msg.MarkNotificationReadRequest
	17, // 20: goim_msg.message.AddNotification:input_type -> goim_msg.AddNotificationRequest
	19, // 21: goim_msg.message.GetNotification:input_type -> goim_msg.GetNotificationRequest
	21, // 22: goim_msg.message.RemoveNotification:input_type -> goim_msg.RemoveNotificationRequest
	5,  // 23: goim_msg.message.SyncOfflineMessages:output_type -> goim_msg.SyncMsgResponse
	3,  // 24: goim_msg.message.SendMessage:output_type -> goim_msg.SendMsgResponse
	8,  // 25: goim_msg.message.SyncOfflineGroupMessages:output_type -> goim_msg.SyncGroupMsgResponse
	10, // 26: goim_msg.message.SyncGroupLatestMessages:output_type -> goim_msg.SyncGroupLatestMessagesResponse
	24, // 27: goim_msg.message.SyncGroupMessages:output_type -> goim_msg.SyncGroupMessageResponse
	26, // 28: goim_msg.message.SyncLatestGroupMessages:output_type -> goim_msg.SyncLatestGroupMessageResponse
	14, // 29: goim_msg.message.ListNotifications:output_type -> goim_msg.ListNotificationResponse
	16, // 30: goim_msg.message.MarkNotificationRead:output_type -> goim_msg.MarkNotificationReadResponse
	18, // 31: goim_msg.message.AddNotification:output_type -> goim_msg.AddNotificationResponse
	20, // 32: goim_msg.message.GetNotification:output_type -> goim_msg.GetNotificationResponse
	22, // 33: goim_msg.message.RemoveNotification:output_type -> goim_msg.RemoveNotificationResponse
	23, // [23:34] is the sub-list for method output_type
	12, // [12:23] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_goim_msg_proto_init() }
func file_goim_msg_proto_init() {
	if File_goim_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goim_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncMsgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncGroupMsgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleGroupMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncGroupMsgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncGroupLatestMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncGroupLatestMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MqGroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkNotificationReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkNotificationReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncGroupMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncGroupMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLatestGroupMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goim_msg_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLatestGroupMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_goim_msg_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goim_msg_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goim_msg_proto_goTypes,
		DependencyIndexes: file_goim_msg_proto_depIdxs,
		EnumInfos:         file_goim_msg_proto_enumTypes,
		MessageInfos:      file_goim_msg_proto_msgTypes,
	}.Build()
	File_goim_msg_proto = out.File
	file_goim_msg_proto_rawDesc = nil
	file_goim_msg_proto_goTypes = nil
	file_goim_msg_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MessageClient is the client API for Message service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageClient interface {
	SyncOfflineMessages(ctx context.Context, in *SyncMsgRequest, opts ...grpc.CallOption) (*SyncMsgResponse, error)
	// SendMessage 发送消息
	SendMessage(ctx context.Context, in *SendMsgRequest, opts ...grpc.CallOption) (*SendMsgResponse, error)
	SyncOfflineGroupMessages(ctx context.Context, in *SyncGroupMsgRequest, opts ...grpc.CallOption) (*SyncGroupMsgResponse, error)
	SyncGroupLatestMessages(ctx context.Context, in *SyncGroupLatestMessagesRequest, opts ...grpc.CallOption) (*SyncGroupLatestMessagesResponse, error)
	SyncGroupMessages(ctx context.Context, in *SyncGroupMessageRequest, opts ...grpc.CallOption) (*SyncGroupMessageResponse, error)
	SyncLatestGroupMessages(ctx context.Context, in *SyncLatestGroupMessageRequest, opts ...grpc.CallOption) (*SyncLatestGroupMessageResponse, error)
	ListNotifications(ctx context.Context, in *ListNotificationRequest, opts ...grpc.CallOption) (*ListNotificationResponse, error)
	MarkNotificationRead(ctx context.Context, in *MarkNotificationReadRequest, opts ...grpc.CallOption) (*MarkNotificationReadResponse, error)
	AddNotification(ctx context.Context, in *AddNotificationRequest, opts ...grpc.CallOption) (*AddNotificationResponse, error)
	GetNotification(ctx context.Context, in *GetNotificationRequest, opts ...grpc.CallOption) (*GetNotificationResponse, error)
	RemoveNotification(ctx context.Context, in *RemoveNotificationRequest, opts ...grpc.CallOption) (*RemoveNotificationResponse, error)
}

type messageClient struct {
	cc grpc.ClientConnInterface
}

func NewMessageClient(cc grpc.ClientConnInterface) MessageClient {
	return &messageClient{cc}
}

func (c *messageClient) SyncOfflineMessages(ctx context.Context, in *SyncMsgRequest, opts ...grpc.CallOption) (*SyncMsgResponse, error) {
	out := new(SyncMsgResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/SyncOfflineMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) SendMessage(ctx context.Context, in *SendMsgRequest, opts ...grpc.CallOption) (*SendMsgResponse, error) {
	out := new(SendMsgResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) SyncOfflineGroupMessages(ctx context.Context, in *SyncGroupMsgRequest, opts ...grpc.CallOption) (*SyncGroupMsgResponse, error) {
	out := new(SyncGroupMsgResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/SyncOfflineGroupMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) SyncGroupLatestMessages(ctx context.Context, in *SyncGroupLatestMessagesRequest, opts ...grpc.CallOption) (*SyncGroupLatestMessagesResponse, error) {
	out := new(SyncGroupLatestMessagesResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/SyncGroupLatestMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) SyncGroupMessages(ctx context.Context, in *SyncGroupMessageRequest, opts ...grpc.CallOption) (*SyncGroupMessageResponse, error) {
	out := new(SyncGroupMessageResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/SyncGroupMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) SyncLatestGroupMessages(ctx context.Context, in *SyncLatestGroupMessageRequest, opts ...grpc.CallOption) (*SyncLatestGroupMessageResponse, error) {
	out := new(SyncLatestGroupMessageResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/SyncLatestGroupMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) ListNotifications(ctx context.Context, in *ListNotificationRequest, opts ...grpc.CallOption) (*ListNotificationResponse, error) {
	out := new(ListNotificationResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/ListNotifications", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) MarkNotificationRead(ctx context.Context, in *MarkNotificationReadRequest, opts ...grpc.CallOption) (*MarkNotificationReadResponse, error) {
	out := new(MarkNotificationReadResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/MarkNotificationRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) AddNotification(ctx context.Context, in *AddNotificationRequest, opts ...grpc.CallOption) (*AddNotificationResponse, error) {
	out := new(AddNotificationResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/AddNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) GetNotification(ctx context.Context, in *GetNotificationRequest, opts ...grpc.CallOption) (*GetNotificationResponse, error) {
	out := new(GetNotificationResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/GetNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) RemoveNotification(ctx context.Context, in *RemoveNotificationRequest, opts ...grpc.CallOption) (*RemoveNotificationResponse, error) {
	out := new(RemoveNotificationResponse)
	err := c.cc.Invoke(ctx, "/goim_msg.message/RemoveNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageServer is the server API for Message service.
type MessageServer interface {
	SyncOfflineMessages(context.Context, *SyncMsgRequest) (*SyncMsgResponse, error)
	// SendMessage 发送消息
	SendMessage(context.Context, *SendMsgRequest) (*SendMsgResponse, error)
	SyncOfflineGroupMessages(context.Context, *SyncGroupMsgRequest) (*SyncGroupMsgResponse, error)
	SyncGroupLatestMessages(context.Context, *SyncGroupLatestMessagesRequest) (*SyncGroupLatestMessagesResponse, error)
	SyncGroupMessages(context.Context, *SyncGroupMessageRequest) (*SyncGroupMessageResponse, error)
	SyncLatestGroupMessages(context.Context, *SyncLatestGroupMessageRequest) (*SyncLatestGroupMessageResponse, error)
	ListNotifications(context.Context, *ListNotificationRequest) (*ListNotificationResponse, error)
	MarkNotificationRead(context.Context, *MarkNotificationReadRequest) (*MarkNotificationReadResponse, error)
	AddNotification(context.Context, *AddNotificationRequest) (*AddNotificationResponse, error)
	GetNotification(context.Context, *GetNotificationRequest) (*GetNotificationResponse, error)
	RemoveNotification(context.Context, *RemoveNotificationRequest) (*RemoveNotificationResponse, error)
}

// UnimplementedMessageServer can be embedded to have forward compatible implementations.
type UnimplementedMessageServer struct {
}

func (*UnimplementedMessageServer) SyncOfflineMessages(context.Context, *SyncMsgRequest) (*SyncMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncOfflineMessages not implemented")
}
func (*UnimplementedMessageServer) SendMessage(context.Context, *SendMsgRequest) (*SendMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedMessageServer) SyncOfflineGroupMessages(context.Context, *SyncGroupMsgRequest) (*SyncGroupMsgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncOfflineGroupMessages not implemented")
}
func (*UnimplementedMessageServer) SyncGroupLatestMessages(context.Context, *SyncGroupLatestMessagesRequest) (*SyncGroupLatestMessagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncGroupLatestMessages not implemented")
}
func (*UnimplementedMessageServer) SyncGroupMessages(context.Context, *SyncGroupMessageRequest) (*SyncGroupMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncGroupMessages not implemented")
}
func (*UnimplementedMessageServer) SyncLatestGroupMessages(context.Context, *SyncLatestGroupMessageRequest) (*SyncLatestGroupMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncLatestGroupMessages not implemented")
}
func (*UnimplementedMessageServer) ListNotifications(context.Context, *ListNotificationRequest) (*ListNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotifications not implemented")
}
func (*UnimplementedMessageServer) MarkNotificationRead(context.Context, *MarkNotificationReadRequest) (*MarkNotificationReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MarkNotificationRead not implemented")
}
func (*UnimplementedMessageServer) AddNotification(context.Context, *AddNotificationRequest) (*AddNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNotification not implemented")
}
func (*UnimplementedMessageServer) GetNotification(context.Context, *GetNotificationRequest) (*GetNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNotification not implemented")
}
func (*UnimplementedMessageServer) RemoveNotification(context.Context, *RemoveNotificationRequest) (*RemoveNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveNotification not implemented")
}

func RegisterMessageServer(s *grpc.Server, srv MessageServer) {
	s.RegisterService(&_Message_serviceDesc, srv)
}

func _Message_SyncOfflineMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncMsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).SyncOfflineMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/SyncOfflineMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).SyncOfflineMessages(ctx, req.(*SyncMsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).SendMessage(ctx, req.(*SendMsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_SyncOfflineGroupMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncGroupMsgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).SyncOfflineGroupMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/SyncOfflineGroupMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).SyncOfflineGroupMessages(ctx, req.(*SyncGroupMsgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_SyncGroupLatestMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncGroupLatestMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).SyncGroupLatestMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/SyncGroupLatestMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).SyncGroupLatestMessages(ctx, req.(*SyncGroupLatestMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_SyncGroupMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncGroupMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).SyncGroupMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/SyncGroupMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).SyncGroupMessages(ctx, req.(*SyncGroupMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_SyncLatestGroupMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncLatestGroupMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).SyncLatestGroupMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/SyncLatestGroupMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).SyncLatestGroupMessages(ctx, req.(*SyncLatestGroupMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_ListNotifications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).ListNotifications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/ListNotifications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).ListNotifications(ctx, req.(*ListNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_MarkNotificationRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkNotificationReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).MarkNotificationRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/MarkNotificationRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).MarkNotificationRead(ctx, req.(*MarkNotificationReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_AddNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).AddNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/AddNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).AddNotification(ctx, req.(*AddNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_GetNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).GetNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/GetNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).GetNotification(ctx, req.(*GetNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_RemoveNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).RemoveNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goim_msg.message/RemoveNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).RemoveNotification(ctx, req.(*RemoveNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Message_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goim_msg.message",
	HandlerType: (*MessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncOfflineMessages",
			Handler:    _Message_SyncOfflineMessages_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Message_SendMessage_Handler,
		},
		{
			MethodName: "SyncOfflineGroupMessages",
			Handler:    _Message_SyncOfflineGroupMessages_Handler,
		},
		{
			MethodName: "SyncGroupLatestMessages",
			Handler:    _Message_SyncGroupLatestMessages_Handler,
		},
		{
			MethodName: "SyncGroupMessages",
			Handler:    _Message_SyncGroupMessages_Handler,
		},
		{
			MethodName: "SyncLatestGroupMessages",
			Handler:    _Message_SyncLatestGroupMessages_Handler,
		},
		{
			MethodName: "ListNotifications",
			Handler:    _Message_ListNotifications_Handler,
		},
		{
			MethodName: "MarkNotificationRead",
			Handler:    _Message_MarkNotificationRead_Handler,
		},
		{
			MethodName: "AddNotification",
			Handler:    _Message_AddNotification_Handler,
		},
		{
			MethodName: "GetNotification",
			Handler:    _Message_GetNotification_Handler,
		},
		{
			MethodName: "RemoveNotification",
			Handler:    _Message_RemoveNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goim_msg.proto",
}
