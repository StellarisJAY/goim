syntax = "proto3";
package msg;
option go_package = "./pb";

// MessageFlag 消息类型定义
enum MessageFlag {
  From = 0;
  To = 1;
  Group = 2;
  FriendAccepted = 11;
  GroupInvitationAccepted = 21;
}

message BaseMsg {
  int64 from = 1;
  int64 to = 2;
  string content = 3;
  MessageFlag flag = 4;
  int64 timestamp = 5;
  int64 id = 6;
  int64 seq = 7;
  string deviceId = 8;
}

message SendMsgRequest{
  BaseMsg msg = 1;
}

message SendMsgResponse{
  int32 code = 1;
  string message = 2;
  int64 messageId = 3;
  int64 timestamp = 4;
  string content = 5;
}

// 同步离线消息请求
message SyncMsgRequest{
  int64 lastSeq = 1;
  int64 userID = 2;
  // 可选参数，指定消息来源
  optional int64 from = 3;
  // 可选参数，执行来源类型
  optional int32 flag = 4;
}

message SyncMsgResponse{
  int32 Code = 1;
  string message = 2;
  int64 initSeq = 3;
  int64 lastSeq = 4;
  repeated BaseMsg messages = 5;
}

service message {
  rpc SyncOfflineMessages(SyncMsgRequest) returns (SyncMsgResponse) {}
  // SendMessage 发送消息
  rpc SendMessage(SendMsgRequest) returns (SendMsgResponse) {}
}